#The first parameter is the file in the format of the TmpFile
#generated by survival.py:
#TCGA-A6-5665 YES 1 671
#TCGA-A6-5666 YES 1 995
#TCGA-AA-3530 YES 1 580
#TCGA-AA-3811 YES 0 306
#TCGA-AA-3815 YES 1 1005
#TCGA-AA-3821 YES 1 31

import sys
import numpy as np
from lifelines import KaplanMeierFitter
from lifelines.statistics import logrank_test
import matplotlib.pyplot as plt
PVALUE=0.0

def read_file(file):
	t1=[]
	t2=[]
	c1=[]
	c2=[]
	with open(file, 'r') as f:
		for line in f:
			v = line.split(' ') 
			#print v
			if v[1] == 'YES': #Mutation=group1
				c1.append(int(v[2]))
				t1.append(int(v[3].rstrip()))
			elif v[1] == 'NO': #Not mutation=group 2
				c2.append(int(v[2]))
				t2.append(int(v[3].rstrip()))		
			else:
				print('Error: not mutation found')
	#print t1,t2,c1,c2
	return t1,t2,c1,c2

def plotKaplan(T, lab):
	kmf=KaplanMeierFitter()
	ax=kmf.fit(T, label=lab).plot(ax=ax)

def kaplanMeier(T,E):
	kmf = KaplanMeierFitter()
	if len(T)!=0 and len(E)!=0:
		kmf.fit(T, event_observed=E)
		return kmf
	else:
		print('Empty set for Kaplan Meier')
		sys.exit()

if __name__ == '__main__':
	f=sys.argv[1] #'TmpgroupsSurv.txt' #sys.argv[1]
	T1,T2,C1,C2 = read_file(f)
	results = logrank_test(T1, T2, event_observed_A=C1, event_observed_B=C2)
	#print(results.__dict__)
	#results.print_summary()
	#print(results.p_value)  
	#print(results.test_statistic)
	ax=plt.subplot(111)
	kmf2 = kaplanMeier(T2,C2)
	kmf1 = kaplanMeier(T1,C1)
	PVALUE = results.p_value
	kmf2.plot(ax=ax,label="Only one gene mutated in tumor")
	kmf1.plot(ax=ax,label="Both genes mutated in tumor")
	plt.ylim(0,1)
	plt.xlim(0,3000)
	plt.title("Survival of both genes mutated in tumor against only one")
#        plotKaplan(T1,"both")
	print(results.p_value, results.test_statistic, kmf1.median_survival_time_, kmf2.median_survival_time_, len(T1), len(T2))
	plt.show()
